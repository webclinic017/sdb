name: Go Release

on:
  release:
    types: [ published ]

jobs:

  release:
    name: Build with go ${{ matrix.go_version }} on ${{ matrix.os }} and upload
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        go_version: [ 1.17 ]
        os: [ ubuntu-latest, windows-latest, macOS-latest ]

    steps:

      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'

      - name: Install protoc-gen-go
        run: |
          go get github.com/golang/protobuf/protoc-gen-go
          go get google.golang.org/grpc/cmd/protoc-gen-go-grpc

      - name: Build Protobuf
        run: sh ./scripts/build_protobuf.sh

      - name: Build
        run: |
          go build -o sdb -v ./cmd/sdb/sdb.go

      - name: Gzip
        run: |
          mkdir sdb-${{ matrix.os }}
          mkdir sdb-${{ matrix.os }}/configs
          cp sdb sdb-${{ matrix.os }}
          cp ./configs/config.yml sdb-${{ matrix.os }}/configs/config.yml
          tar -czvf sdb-${{ matrix.os }}.tar.gz sdb-${{ matrix.os }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sdb-${{ matrix.os }}.tar.gz
          asset_name: sdb-${{ matrix.os }}.tar.gz
          tag: ${{ github.ref }}